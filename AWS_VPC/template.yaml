AWSTemplateFormatVersion: '2010-09-09'
Description: CFT Stack to create VPC including public and private subnets with custom route table and Nacls for each subnet

Resources:
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'false'
      EnableDnsHostnames: 'false'
      InstanceTenancy: default
  myPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: "us-east-1a"
  myPrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: "us-east-1a"
  myInternetGateway:
    Type: AWS::EC2::InternetGateway
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref myVPC
      InternetGatewayId: !Ref myInternetGateway
  myPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVPC
  myPrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref myVPC
  myPrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref myPrivateSubnet
      RouteTableId: !Ref myPrivateRouteTable
  myPublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref myPublicSubnet
      RouteTableId: !Ref myPublicRouteTable
  myInternetGatewayRoute:
    Type: AWS::EC2::Route
    DependsOn: myPublicSubnetRouteTableAssociation
    Properties:
       RouteTableId: !Ref myPublicRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId: !Ref myInternetGateway
  myPublicNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
        VpcId: !Ref myVPC
  myPrivateNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
        VpcId: !Ref myVPC
  myPrivateSubnetPrivateNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref myPrivateSubnet
      NetworkAclId: !Ref myPrivateNetworkAcl
  myPubliceSubnetPrivateNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref myPublicSubnet
      NetworkAclId: !Ref myPublicNetworkAcl
  PublicInboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId: !Ref myPublicNetworkAcl
       RuleNumber: 101
       Protocol: -1
       RuleAction: allow
       CidrBlock: 0.0.0.0/0

  PrivateInboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId: !Ref myPrivateNetworkAcl
       RuleNumber: 101
       Protocol: -1
       RuleAction: allow
       CidrBlock: 0.0.0.0/0
  PublicOutboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId: !Ref myPublicNetworkAcl
       RuleNumber: 101
       Protocol: -1
       Egress: true
       RuleAction: allow
       CidrBlock: 0.0.0.0/0
  PrivateOutboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId: !Ref myPrivateNetworkAcl
       RuleNumber: 101
       Protocol: -1
       Egress: true
       RuleAction: allow
       CidrBlock: 0.0.0.0/0
Outputs:
  myVPC:
    Value: !Ref myVPC     
  myPublicSubnet:
    Value: !Ref myPublicSubnet
  myPrivateSubnet:
     Value: !Ref myPrivateSubnet
  myInternetGateway:
     Value: !Ref myInternetGateway  
  myPublicRouteTable:
     Value: !Ref myPublicRouteTable
  myPrivateRouteTable:
     Value: !Ref myPrivateRouteTable
  myPublicNetworkAcl:
     Value: !Ref myPublicNetworkAcl
  myPrivateNetworkAcl:
     Value: !Ref myPrivateNetworkAcl
  

